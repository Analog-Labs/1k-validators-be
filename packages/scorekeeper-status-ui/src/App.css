/* Global font style */
body, html {
  font-family: 'Source Code Pro', monospace;
  background-color: #0f0f0f; /* Dark background for contrast */
  color: #0f0; /* Hacker green text color */
}


.App {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: start;
  min-height: 100vh;
  width: 100vw;
  color: #0f0; /* Adjust text color if needed */
  background-color: #000000;
  background-image: url("https://www.transparenttextures.com/patterns/nami.png");
  /* This is mostly intended for prototyping; please download the pattern and re-host for production environments. Thank you! */
  /*background-blend-mode: overlay; !* Blends the texture with the gradient *!*/
  font-family: 'Source Code Pro', monospace;
  padding: 20px;
  box-sizing: border-box;
}

h1 {
  color: #0f0; /* Neon green */
  margin-bottom: 20px;
}

.jobItem {
  display: flex; /* Use flexbox for job items */
  flex-direction: column; /* Stack job details vertically */
  margin: 10px;
  padding: 20px;
  border: 1px solid #0f0; /* Neon green border */
  border-radius: 10px;
  flex: 1; /* Allow each job item to grow */
  min-width: 300px; /* Minimum width for each job item */
  box-shadow: 0 0 10px rgba(0, 255, 0, 0.5); /* Neon green glow */
  background: rgba(0, 255, 0, 0.05);
}

.jobHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.progressBarBackground {
  background: rgba(0, 0, 0, 0.5); /* Semi-transparent black */
  border: 1px solid #0f0; /* Thinner neon green border */
  border-radius: 5px;
  overflow: hidden;
  width: 100%;
  margin-top: 10px;
  box-shadow: 0 0 15px 5px rgba(0, 255, 0, 0.3); /* Bigger, more subtle glow */
  position: relative;
}

.progressBar {
  transition: width 0.5s ease-out;
  height: 20px; /* Set the height of the progress bar */
  background: linear-gradient(to right, rgba(0, 0, 0, 0.6), rgba(0, 255, 0, 0.6)); /* Gradient from transparent black to lighter */
  border-radius: 3px; /* Rounded corners for the progress bar */
  position: relative;
  overflow: hidden;
}

.progressText {
  text-align: right; /* Right-align the progress text */
  border-radius: 10px; /* Rounded borders */
  padding: 5px; /* Add padding to the progress text */
}

.progressItem {
  font-size: 11px; /* Adjust the font size as needed */
  border: 1px solid #4CAF50; /* Green border */
  border-radius: 5px; /* Rounded border */
  padding: 5px; /* Add padding for better appearance */
  white-space: nowrap; /* Prevent wrapping of words */
  overflow: hidden; /* Hide any overflowing content */
  text-overflow: ellipsis; /* Display ellipsis (...) for overflowed text */
  margin-top: 5px; /* Add some space between progress text and iteration */
}

.progressBar::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  backdrop-filter: blur(4px); /* Blur effect */
  z-index: -1; /* Ensure the blur is behind the gradient */
}

/* Container for job items to arrange them in a flex row */
.jobsContainer {
  display: flex;
  flex-wrap: wrap; /* Allow items to wrap to the next line */
  justify-content: center; /* Center items horizontally */
  width: 100%; /* Take up full container width */
  max-width: 90%; /* Maximum width of the container */
  margin: 0 auto; /* Center the container */
}

.fullPageContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh; /* Full viewport height */
  width: 100vw; /* Full viewport width */
  background-color: #0f0f0f; /* Dark background */
  color: #0f0; /* Hacker green text color */
  font-family: 'Source Code Pro', monospace;
}

/* Centered container for error message */
.errorContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  border: 1px solid #0f0; /* Hacker green border */
  border-radius: 10px;
  padding: 20px;
  margin-top: 20px; /* Space between the dropdown and the error box */
  background: rgba(0, 255, 0, 0.05);
}

.errorContainer p {
  font-size: 2em; /* Large text size */
  margin-top: 20px; /* Space between the loader and the text */
  padding-left: 10%;
  padding-right: 10%;
}

.endpointSelector {
  padding: 10px;
  font-size: 16px;
  background-color: #0f0f0f; /* Dark background */
  color: #0f0; /* Hacker green text color */
  border: 1px solid #0f0; /* Hacker green border */
  border-radius: 10px; /* Rounded borders */
  outline: none; /* Remove default focus outline */
  margin-bottom: 20px; /* Space below the dropdown */
}

.endpointSelector:hover {
  background-color: #1a1a1a; /* Slightly lighter background on hover */
}

.jobItemOld {
  border-color: yellow;
  color: yellow;
  background-color: rgba(255, 255, 0, 0.1); /* Yellow background with transparency */
}

.jobItemError {
  border-color: red;
  color: red;
  background-color: rgba(255, 0, 0, 0.1); /* Red background with transparency */
}

.lastUpdateBox {
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid  rgba(255, 255, 0, 0.5); /* Neon green border */
  background: linear-gradient(to right, rgba(255, 255, 0, 0.05), rgba(255, 255, 0, 0.1)); /* Gradient from transparent black to lighter */
  border-radius: 3px;
  padding: 10px;
}

.warningSymbol {
  margin-right: 10px;
}

.lastUpdatedText {
  font-size: 12px; /* Adjust the font size as needed */
}

.lastUpdatedBox {
  display: flex;
  align-items: center;
}

.timeIcon {
  color: #4CAF50; /* Default color for time icon */
  margin-right: 5px; /* Add spacing between icon and text */
  display: flex;
  align-items: center; /* Vertically center the clock icon */
}

.oldTime {
  color: yellow; /* Color for old time icon */
}

@media screen and (max-width: 768px) {
  .container {
    flex-direction: column;
  }

  .box {
    width: 100%;
  }
}

.errorContainer {
  border: 2px solid rgba(255, 0, 0, 0.1); /* Adjusted red shade for consistency */
  color: red;
  background-color: rgba(255, 0, 0, 0.1); /* Red background with transparency */
  padding: 10px 15px; /* Adjusted padding for consistency */
  border-radius: 4px; /* Rounded corners similar to your buttons */
  display: flex;
  align-items: center; /* Vertical alignment */
  gap: 10px; /* Space between icon and text */
  /*margin-top: 20px; !* Spacing from the preceding elements *!*/
  align-content: center;
  justify-content: center;
  transition: opacity 0.5s ease-in-out; /* Smooth transition for opacity changes */
  opacity: 0;
}

.errorContainer.visible {
  opacity: 1; /* Make the element fully visible */
}

.errorMessage {
  margin: 0; /* Remove default paragraph margins */
  font-size: 10px; /* Keeping font size consistent with your design */
  /*font-weight: 200; !* Medium font weight for emphasis *!*/
  align-content: center;
  justify-content: center;
  display: block;
}

.errorIcon {
  font-size: 20px; /* Icon size, adjust based on your design */
  /* If using an SVG or <img> for icons, set width and height instead */
}
.healthCheckBar, .healthCheckItem {
  display: flex;
  align-items: center; /* Ensures vertical alignment is centered */
  justify-content: center; /* Centers content horizontally */
  gap: 10px; /* Space between items */
  padding: 10px;
  border-radius: 5px;
  margin: 10px 0; /* Adds some space between the health check bar and items */
}

.healthCheckBar {
  width: 80%; /* Adjusted for better responsiveness */
  box-shadow: 0 0 10px rgba(0, 255, 0, 0.5); /* Neon green glow */
  background: rgba(0, 255, 0, 0.05);
  border: 1px solid rgba(0, 255, 0, 0.5);
  margin: 0 auto; /* Center the bar */
  flex-wrap: wrap; /* Allows items to wrap if necessary */
}

.healthCheckItem {
  flex: 1 1 auto; /* Allows items to grow and shrink as needed, but not beyond their content's size */
  min-width: 0; /* Allows the item to shrink below its content's intrinsic size if necessary */
}

.healthCheckItem span {
  white-space: nowrap; /* Prevents text from wrapping */
  overflow: hidden; /* Hides overflow */
  text-overflow: ellipsis; /* Adds ellipsis to overflowed text */
}

.healthCheckIcon {
  transition: color 0.3s ease-in-out;
  font-size: 1.5rem; /* Larger icons */
}

.connected, .disconnected {
  flex-shrink: 0; /* Prevents icons from shrinking */
}

.connected {
  color: #4CAF50; /* Green for connected */
}

.disconnected {
  color: #F44336; /* Red for disconnected */
}

@media (max-width: 768px) {
  .healthCheckBar {
    flex-direction: column; /* Stack items vertically on smaller screens */
    width: 95%; /* Use more of the screen width on smaller devices */
    align-items: stretch; /* Stretches items to fill the container */
  }

  .healthCheckItem {
    justify-content: start; /* Aligns content to the start, giving more room for the text */
  }
}

.healthCheckIcon, .jobHeader svg {
  transition: color 0.3s ease-in-out; /* Smooth transition for color changes */
  /* Other styles remain the same */
}

.card {
  transition: transform 0.3s ease-in-out; /* Smooth transition for transform changes */
  /* Other styles remain the same */
}

.card:hover {
  transform: scale(1.05); /* Slightly increase the size on hover */
}

.nominatorsContainer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 20px; /* Space between nominator items */
}

.nominatorItem {
  background: rgba(0, 255, 0, 0.05);
  border: 1px solid #0f0;
  border-radius: 10px;
  padding: 15px;
  box-shadow: 0 0 10px rgba(0, 255, 0, 0.5);
  width: 100%;
  max-width: 300px; /* Maximum width for each item */
  margin-bottom: 20px; /* Space below each item */
}

.nominatorTitle {
  color: #0f0;
  border-bottom: 1px solid #0f0;
  padding-bottom: 10px;
  margin-bottom: 15px;
}

.nominatorInfo p {
  display: flex;
  align-items: center;
  gap: 10px; /* Space between icon and text */
  margin-bottom: 10px; /* Space between each piece of information */
  color: #0f0; /* Text color */
}

.icon {
  min-width: 24px; /* Ensure icons are aligned */
  text-align: center;
}