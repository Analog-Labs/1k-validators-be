version: 2

commands:
  setup_mongodb_memory_server:
    description: "Setup MongoDB Memory Server Environment"
    steps:
      - run:
          name: Setup MongoDB Memory Server Environment
          command: |
            echo 'export MONGOMS_DOWNLOAD_DIR="/tmp/mongodb-binaries"' >> $BASH_ENV
            echo 'export MONGOMS_DISABLE_POSTINSTALL="1"' >> $BASH_ENV
      - run:
          name: Pre-download MongoDB Binary
          command: |
            mkdir -p /tmp/mongodb-binaries
            curl -L https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2204-7.0.3.tgz -o /tmp/mongodb-binaries/mongodb-linux-x86_64-ubuntu2204-7.0.3.tgz


jobs:
  checkDependencies:
    docker:
      - image: node:slim
    steps:
      - checkout
      - run:
          command: |
            yarn audit

  checkCandidatesFile:
    docker:
      - image: node:18
    resource_class: large
    steps:
      - checkout
      - run:
          environment:
            YARN_ENABLE_IMMUTABLE_INSTALLS: false
          command: |
            yarn set version 3.2.2 && yarn install && yarn build && yarn workspace @1kv/common ci:checkCandidatesFile

  checkCoreESLint:
    docker:
      - image: node:18
    resource_class: large
    steps:
      - checkout
      - run:
          environment:
            YARN_ENABLE_IMMUTABLE_INSTALLS: false
          command: |
            yarn set version 3.2.2 && yarn install && yarn build && yarn workspace @1kv/core lint

  #  checkCommonESLint:
  #    docker:
  #      - image: node:18
  #    resource_class: large
  #    steps:
  #      - checkout
  #      - run:
  #          environment:
  #            YARN_ENABLE_IMMUTABLE_INSTALLS: false
  #          command: |
  #            yarn set version 3.2.2 && yarn install && yarn build && yarn workspace @1kv/common lint

  test_common:
    parameters:
      test_command:
        type: string
    docker:
      - image: node:18
    resource_class: xlarge
    steps:
      - checkout
      - setup_mongodb_memory_server
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Run Tests
          command: yarn workspace @1kv/common << parameters.test_command >>
      - run:
          name: Clear MongoDB lock files
          command: rm -f /tmp/mongodb-binaries/*.lock

  #  testCore:
  #    docker:
  #      - image: node:18
  #    resource_class: large
  #    steps:
  #      - checkout
  #      - run:
  #          environment:
  #            YARN_ENABLE_IMMUTABLE_INSTALLS: false
  #          command: |
  #            yarn set version 3.2.2 && yarn install && yarn build && yarn workspace @1kv/core test

  helmLint:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - run:
          command: |
            helm lint ./charts/otv-backend

  buildCoreImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/build-image.sh web3f/otv-backend . --build-arg PACKAGE=core

  buildGatewayImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/build-image.sh web3f/otv-gateway . --build-arg PACKAGE=gateway

  buildTelemetryImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/build-image.sh web3f/otv-telemetry . --build-arg PACKAGE=telemetry

  buildWorkerImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/build-image.sh web3f/otv-worker . --build-arg PACKAGE=worker

  integrationTests:
    docker:
      - image: web3f/ci-commons:v3.2.3
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/integration-tests.sh kindest/node:v1.21.1

  publishCoreImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/publish-image.sh web3f/otv-backend

  publishCoreImageStaging:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/publish-image.sh web3f/otv-backend staging

  publishGatewayImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/publish-image.sh web3f/otv-gateway

  publishTelemetryImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/publish-image.sh web3f/otv-telemetry

  publishWorkerImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/publish-image.sh web3f/otv-worker

  publishChart:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - run:
          command: |
            /scripts/publish-chart.sh

  deploy:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          environment:
            HELM_ENV: production
          command: |
            /scripts/deploy.sh -c community

workflows:
  version: 2
  test_and_deploy:
    jobs:
      # - checkDependencies:
      # filters:
      # tags:
      # only: /.*/
      - checkCandidatesFile:
          filters:
            tags:
              ignore: /pull\/[0-9]+/
      #      - checkCommonESLint:
      #          filters:
      #            tags:
      #              only: /.*/
      - checkCoreESLint:
          filters:
            tags:
              only: /.*/
      - test_common:
          test_command: test:unit
          filters:
            tags:
              only: /.*/
      - test_common:
          test_command: test:int
          filters:
            tags:
              only: /.*/git status
      - helmLint:
          filters:
            tags:
              only: /.*/
      - buildCoreImage:
          context: dockerhub-bot
          filters:
            tags:
              only: /.*/
      - buildGatewayImage:
          context: dockerhub-bot
          filters:
            tags:
              only: /.*/
      - buildTelemetryImage:
          context: dockerhub-bot
          filters:
            tags:
              only: /.*/
      - buildWorkerImage:
          context: dockerhub-bot
          filters:
            tags:
              only: /.*/
      - integrationTests:
          filters:
            tags:
              only: /.*/
          requires:
            - helmLint
            - buildCoreImage
            - buildGatewayImage
            - testCommonUnit
            - testCommonInt
      - publishCoreImage:
          context: dockerhub-bot
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          requires:
            - integrationTests
      - publishCoreImageStaging:
          context: dockerhub-bot
          filters:
            branches:
              only: staging
          requires:
            - integrationTests
      - publishGatewayImage:
          context: dockerhub-bot
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          requires:
            - integrationTests
      - publishTelemetryImage:
          context: dockerhub-bot
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          requires:
            - integrationTests
      - publishWorkerImage:
          context: dockerhub-bot
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          requires:
            - integrationTests
      - publishChart:
          context: github-bot
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          requires:
            - integrationTests
