version: 2

jobs:
  checkDependencies:
    docker:
      - image: node:slim
    steps:
      - checkout
      - run:
          command: |
            yarn audit

  checkCandidatesFile:
    docker:
      - image: node:18
    resource_class: large
    steps:
      - checkout
      - run:
            environment:
              YARN_ENABLE_IMMUTABLE_INSTALLS: false
            command: |
                yarn set version 3.2.2 && yarn install && yarn build && yarn workspace @1kv/core test:candidates

  checkESLint:
    docker:
      - image: node:18
    resource_class: large      
    steps:
      - checkout
      - run:
          environment:
            YARN_ENABLE_IMMUTABLE_INSTALLS: false
          command: |
            yarn set version 3.2.2 && yarn install && yarn build && yarn workspace @1kv/core lint

  helmLint:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - run:
          command: |
            helm lint ./charts/otv-backend

  buildCoreImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/build-image.sh web3f/otv-backend . --build-arg PACKAGE=core

  buildGatewayImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/build-image.sh web3f/otv-gateway . --build-arg PACKAGE=gateway

  buildTelemetryImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/build-image.sh web3f/otv-telemetry . --build-arg PACKAGE=telemetry

  buildWorkerImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/build-image.sh web3f/otv-worker . --build-arg PACKAGE=worker

  integrationTests:
    docker:
      - image: web3f/ci-commons:v3.2.3
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/integration-tests.sh kindest/node:v1.21.1

  publishCoreImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/publish-image.sh web3f/otv-backend

  publishGatewayImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/publish-image.sh web3f/otv-gateway

  publishTelemetryImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/publish-image.sh web3f/otv-telemetry

  publishWorkerImage:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            /scripts/publish-image.sh web3f/otv-worker

  publishChart:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - run:
          command: |
            /scripts/publish-chart.sh

  deploy:
    docker:
      - image: web3f/ci-commons:v3.2.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          environment:
            HELM_ENV: production
          command: |
            /scripts/deploy.sh -c community

workflows:
  version: 2
  test_and_deploy:
    jobs:
      # - checkDependencies:
          # filters:
            # tags:
              # only: /.*/
      - checkCandidatesFile:
          filters:
            tags:
              ignore: /pull\/[0-9]+/
      - checkESLint:
          filters:
            tags:
              only: /.*/
#      - unitTests:
#          filters:
#            tags:
#              only: /.*/
      - helmLint:
          filters:
            tags:
              only: /.*/
      - buildCoreImage:
          context: dockerhub-bot
          filters:
            tags:
              only: /.*/
      - buildGatewayImage:
          context: dockerhub-bot
          filters:
            tags:
              only: /.*/
#      - buildTelemetryImage:
#          context: dockerhub-bot
#          filters:
#            tags:
#              only: /.*/
#      - buildWorkerImage:
#          context: dockerhub-bot
#          filters:
#            tags:
#              only: /.*/
      - integrationTests:
          filters:
            tags:
              only: /.*/
          requires:
            - helmLint
            - buildCoreImage
            - buildGatewayImage
      - publishCoreImage:
          context: dockerhub-bot
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          requires:
            - integrationTests
      - publishGatewayImage:
          context: dockerhub-bot
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          requires:
            - integrationTests
#      - publishTelemetryImage:
#          context: dockerhub-bot
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /v[0-9]+(\.[0-9]+)*/
#          requires:
#            - integrationTests
#      - publishWorkerImage:
#          context: dockerhub-bot
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /v[0-9]+(\.[0-9]+)*/
#          requires:
#            - integrationTests
      - publishChart:
          context: github-bot
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          requires:
            - integrationTests
      # - deploy:
      #     context: 
      #     - digital_ocean_access
      #     - vault_community
      #     filters:
      #       branches:
      #         ignore: /.*/
      #       tags:
      #         only: /v[0-9]+(\.[0-9]+)*/
      #     requires:
      #       - publishCoreImage
      #       - publishChart


